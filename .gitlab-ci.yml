stages:
- lint
- docs_build
- docker_build
- docker_push
- go_build

.lint_template:
  only:
    refs:
    - master
    - merge_requests
  except:
    variables:
    - $SKIP_LINT == "yes" || $SKIP_DOCS == "true"

# Userguide/Devguide Template Configuration
.docs_template:
  image: python:3.7-alpine3.10
  variables:
    DOCS_PATH_BUILD: build/html

    DOCS_PATH_BASE: /distribution/devops
    DOCS_PATH_FULL: $DOCS_PATH_BASE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/docs/$DOCS_NAME
  before_script:
  - apk add --no-cache make
  - pip install sphinx sphinx_rtd_theme
  after_script:
  - rm -rf $DOCS_PATH_FULL/*
  - mkdir -p $DOCS_PATH_FULL
  - cp -rf $DOCS_PATH_BUILD/* $DOCS_PATH_FULL/
  only:
    refs:
    - master
    - merge_requests
    variables:
    - $RUN_DOCS == "yes" || $RUN_DOCS == "true"
    changes:
    - docs/userguide/**/*

# YAML Job Template Configuration
.dnd_template:
  image: docker:19.03
  services:
  - name: docker:19.03-dind
    command: ["--insecure-registry=docker-registry.devad.catalogic.us:5000"]
  before_script:
  - docker info
  - apk add --no-cache make
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_OPTS: "--insecure-registry='docker-registry.devad.catalogic.us:5000'"
    DOCKER_DRIVER: overlay2

    DOCKER_REGISTRY: docker-registry.devad.catalogic.us:5000

    DOCKER_KUBEDR_IMAGE_NAME_SHORT: kubedr
    DOCKER_KUBEDR_IMAGE_NAME_LONG: $DOCKER_REGISTRY/$DOCKER_KUBEDR_IMAGE_NAME_SHORT
    DOCKER_KUBEDR_IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  only:
    refs:
    - master
    - merge_requests
  except:
    changes:
    - docs/**/*
    - tests/**/*

# Rules/Configuration: https://yamllint.readthedocs.io/en/stable/rules.html
yaml_lint:
  extends: .lint_template
  stage: lint
  image: sdesbure/yamllint
  script:
  - yamllint .

md_lint:
  extends: .lint_template
  stage: lint
  image: cytopia/awesome-ci
  script:
  - syntax-markdown --text --extension='.md' --path=./

md_spelling_lint:
  extends: .lint_template
  stage: lint
  image: alpine:3.10
  before_script:
  - apk add --no-cache curl
  - curl -L -o ./install-misspell.sh https://git.io/misspell
  - sh ./install-misspell.sh -b /usr/local/bin
  script:
  - find . -type f -name '*.md' | xargs misspell -error

sh_lint:
  extends: .lint_template
  stage: lint
  image: cytopia/awesome-ci
  script:
  - syntax-sh --text --path=./scripts

go_lint:
  extends: .lint_template
  stage: lint
  image: golangci/golangci-lint:v1.20.1-alpine
  before_script:
  - golangci-lint help linters
  script:
  - cd kubedr
  - golangci-lint run ./...
  only:
    refs:
    - master
    - merge_requests

userguide:
  extends: .docs_template
  stage: docs_build
  variables:
    DOCS_NAME: userguide.new
  script:
  - cd docs/$DOCS_NAME
  - make html
  artifacts:
    paths:
    - docs/userguide/html

devguide:
  extends: .docs_template
  stage: docs_build
  variables:
    DOCS_NAME: devguide.new
  script:
  - cd docs/$DOCS_NAME
  - make html
  artifacts:
    paths:
    - docs/devguide/html

kubedr_image:
  extends: .dnd_template
  stage: docker_build
  script:
  - make docker_build
  - docker push $DOCKER_KUBEDR_IMAGE_NAME_LONG:$DOCKER_KUBEDR_IMAGE_TAG

kubedr_latest:
  extends: .dnd_template
  stage: docker_push
  variables:
    GIT_STRATEGY: none
  script:
  - make docker_push_latest

kubedr_tags:
  extends: .dnd_template
  stage: docker_push
  variables:
    GIT_STRATEGY: none
  script:
  - make docker_push_latest
  only:
    refs:
    - tags

kubedr_go:
  image: docker-registry.devad.catalogic.us:5000/go-kustomize:latest
  stage: go_build
  script:
  - make go_build
  artifacts:
    paths:
    - kubedr/kubedr.yaml
  only:
    refs:
    - master
    - merge_requests
  except:
    changes:
    - docs/**/*
    - tests/**/*
