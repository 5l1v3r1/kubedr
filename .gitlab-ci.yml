stages:
- lint
- docs_build
- docker_build
- docker_push
- go_build

# YAML Job Template Configurations
.dnd_template:
  image: docker:19.03
  services:
  - name: docker:19.03-dind
    command: ["--insecure-registry=docker-registry.devad.catalogic.us:5000"]
  before_script:
  - docker info
  - apk add --no-cache make
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_REGISTRY: docker-registry.devad.catalogic.us:5000
    DOCKER_OPTS: "--insecure-registry='docker-registry.devad.catalogic.us:5000'"
    DOCKER_DRIVER: overlay2

# Rules/Configuration: https://yamllint.readthedocs.io/en/stable/rules.html
yaml_lint:
  stage: lint
  image: sdesbure/yamllint
  script:
  - yamllint .
  only:
    changes:
    - "**/*.yml"
    - "**/*.yaml"

md_lint:
  stage: lint
  image: cytopia/awesome-ci
  script:
  - syntax-markdown --text --extension='.md' --path=./
  only:
    changes:
    - "**/*.md"

# TODO: convert misspell to packaged image in kcx-misc
md_spelling_lint:
  stage: lint
  image: alpine:3.10
  before_script:
  - apk add --no-cache curl
  - curl -L -o ./install-misspell.sh https://git.io/misspell
  - sh ./install-misspell.sh -b /usr/local/bin
  script:
  - find . -type f -name '*.md' | xargs misspell -error
  only:
    changes:
    - "**/*.md"

sh_lint:
  stage: lint
  image: cytopia/awesome-ci
  script:
  - syntax-sh --text --path=./scripts
  only:
    changes:
    - scripts/**/*

go_lint:
  stage: lint
  image: golangci/golangci-lint:v1.20.1-alpine
  before_script:
  - golangci-lint help linters
  script:
  - cd kubedr
  - golangci-lint run ./...
  only:
    changes:
    - "kubedr/**/*.go"

userguide:
  stage: docs_build
  image: rust:1.39
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
    MDBOOK_NAME: userguide
    MDBOOK_PATH_BASE: /distribution/devops
    MDBOOK_PATH_FULL: $MDBOOK_PATH_BASE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/docs/$MDBOOK_NAME
  before_script:
  - cargo install mdbook --force --no-default-features --features output --vers "^0.1.0"
  script:
  - cd docs/$MDBOOK_NAME
  - $CARGO_HOME/bin/mdbook build
  - rm -rf $MDBOOK_PATH_FULL/*
  - mkdir -p $MDBOOK_PATH_FULL
  - cp -rf book/* $MDBOOK_PATH_FULL/
  cache:
    paths:
    - .cargo
  only:
    refs:
    - master
    - merge_requests
    changes:
    - docs/userguide/**/*

devguide:
  stage: docs_build
  image: rust:1.39
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
    MDBOOK_NAME: devguide
    MDBOOK_PATH_BASE: /distribution/devops
    MDBOOK_PATH_FULL: $MDBOOK_PATH_BASE/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/docs/$MDBOOK_NAME
  before_script:
  - cargo install mdbook --force --no-default-features --features output --vers "^0.1.0"
  script:
  - cd docs/$MDBOOK_NAME
  - $CARGO_HOME/bin/mdbook build
  - rm -rf $MDBOOK_PATH_FULL/*
  - mkdir -p $MDBOOK_PATH_FULL
  - cp -rf book/* $MDBOOK_PATH_FULL/
  cache:
    paths:
    - .cargo
  only:
    refs:
    - master
    - merge_requests
    changes:
    - docs/devguide/**/*

kubedr_image:
  extends: .dnd_template
  stage: docker_build
  script:
  - make docker_build
  only:
    refs:
    - master
    - merge_requests

kubedr_latest:
  extends: .dnd_template
  stage: docker_push
  variables:
    GIT_STRATEGY: none
  script:
  - make docker_push_latest
  only:
    refs:
    - master
    - merge_requests

kubedr_tags:
  extends: .dnd_template
  stage: docker_push
  variables:
    GIT_STRATEGY: none
  script:
  - make docker_push_latest
  only:
    refs:
    - tags

kubedr_go:
  image: docker-registry.devad.catalogic.us:5000/go-kustomize:latest
  stage: go_build
  script:
  - make go_build
  artifacts:
    paths:
    - kubedr/kubedr.yaml
  only:
    refs:
    - master
    - merge_requests
